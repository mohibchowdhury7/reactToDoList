{"version":3,"sources":["component/todolist/Todo.js","App.js","index.js"],"names":["Todo","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAwHeA,EA1GF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAIF,EACOG,KAAKC,MAAMJ,GAEX,GAMwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAU,WACZ,GAAId,EAEG,GAAIA,GAAaY,EACpBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAQC,KAAOP,EACR,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAExBgB,MAGff,EAAa,IACbU,EAAc,MACdE,GAAgB,OACf,CACD,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAnBbsB,MAAM,oBAmDd,OAJAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAGA,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,kBACjC,+DAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,kBAAaJ,UAAU,eACtDK,MAAOhC,EAAWiC,SAAU,SAACC,GAAD,OAAWjC,EAAaiC,EAAMC,OAAOH,UAChEpB,EACG,mBAAGe,UAAU,sBAAsBS,QAAStB,IAE5C,mBAAGa,UAAU,4BAA4BS,QAAStB,OAK1D,qBAAKa,UAAU,YAAf,SACKnB,EAAMO,KAAI,SAACC,GACR,OACI,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACA,mBAAGA,UAAU,sBAAsBS,QAAS,kBApD3D,SAACC,GACd,IAAMC,EAAmB9B,EAAM+B,MAAK,SAACvB,GACjC,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAiBpB,MAC9BP,EAAc0B,GACdxB,GAAgB,GA8C8D2B,CAASxB,EAAQC,OACnE,mBAAGU,UAAU,2BAA2BS,QAAS,kBA3C9D,SAACC,GAChB,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GAC/B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAASgC,GAuC0EE,CAAW3B,EAAQC,YAJ/CD,EAAQC,SAanD,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaS,QA7ClE,WACd3B,EAAS,KA4CO,SACI,0DCrGbmC,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d2fa65bf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\n\r\n//get the localStorage data back\r\nconst getLocalData = () => {\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n\r\n    if (lists) {\r\n        return JSON.parse(lists);\r\n    } else {\r\n        return [];\r\n    }\r\n};\r\n\r\nconst Todo = () => {\r\n    const [inputdata, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n    //add the items function\r\n    const addItem = () => {\r\n        if(!inputdata) {\r\n            alert(`Write something`)\r\n        } else if (inputdata && toggleButton){\r\n            setItems(\r\n                items.map((curElem) => {\r\n                    if (curElem.id === isEditItem) {\r\n                        return { ...curElem, name: inputdata };\r\n                    }\r\n                    return curElem;\r\n                })\r\n            );\r\n            setInputData(\"\");\r\n            setIsEditItem(null);\r\n            setToggleButton(false);\r\n        }else{\r\n            const myNewInputData = {\r\n                id: new Date().getTime().toString(),\r\n                name: inputdata,\r\n            }\r\n            setItems([...items, myNewInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    };\r\n\r\n    //edit the items\r\n    const editItem = (index) => {\r\n        const item_todo_edited = items.find((curElem) => {\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(item_todo_edited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    }\r\n\r\n    //how to delete items section\r\n    const deleteItem = (index) => {\r\n        const updatedItems = items.filter((curElem) => {\r\n            return curElem.id !== index;\r\n        });\r\n        setItems(updatedItems);\r\n    };\r\n\r\n    //remove all the  elements\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    };\r\n\r\n    //adding localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./images/todo.svg\" alt=\"To Do Picture\" />\r\n                        <figcaption>Add Your List Here</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍ Add Item\" className=\"form-control\" \r\n                        value={inputdata} onChange={(event) => setInputData(event.target.value)}/>\r\n                        {toggleButton ? (\r\n                            <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n                        ) : (\r\n                            <i className=\"fa fa-plus-square add-btn\" onClick={addItem}></i>\r\n                        )}\r\n                        \r\n                    </div>\r\n                    {/* show searched items start*/}\r\n                    <div className=\"showItems\">\r\n                        {items.map((curElem) => {\r\n                            return(\r\n                                <div className=\"eachItem\" key={curElem.id}>\r\n                                    <h3>{curElem.name}</h3>\r\n                                    <div className=\"todo-btn\">\r\n                                    <i className=\"far fa-edit add-btn\" onClick={() => editItem(curElem.id)}></i>\r\n                                    <i className=\"far fa-trash-alt add-btn\" onClick={() => deleteItem(curElem.id)}></i>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        \r\n                    </div>\r\n\r\n                    {/* remove all button */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}>\r\n                            <span>CHECK LIST</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\nimport Todo from \"./component/todolist/Todo\";\nconst App = () => {\n  return (\n    <div>\n      <Todo/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}